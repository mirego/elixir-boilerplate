name: Reusable CI

on:
  workflow_call:
    inputs:
      database-image:
        required: true
        type: string
      elixir-version:
        required: true
        type: string
      otp-version:
        required: true
        type: string
jobs:
  reusable-ci:
    runs-on: ubuntu-latest

    services:
      db:
        image: ${{ inputs.database-image }}
        env:
          POSTGRES_DB: database_test
          POSTGRES_PASSWORD: password
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ inputs.elixir-version }}
          otp-version: ${{ inputs.otp-version }}

      - uses: actions/setup-node@v1
        with:
          node-version: 14.18

      - uses: actions/cache@v2
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-deps-${{ hashFiles(format('{0}/mix.lock', github.workspace)) }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - uses: actions/cache@v2
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp-version }}-${{ matrix.elixir-version }}-${{ hashFiles(format('{0}/mix.lock', github.workspace)) }}

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles(format('{0}/assets/package-lock.json', github.workspace)) }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup environment variables
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env.test

      - run: make prepare
      - run: make check
      - run: make lint
      - run: make test
      - run: make build DOCKER_IMAGE_TAG=latest
